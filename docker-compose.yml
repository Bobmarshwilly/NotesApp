services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://bobmarshwilly:06062025@postgres:5432/notes_app_db
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./alembic:/app/alembic
    depends_on:
      - postgres
      - kafka
  
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=bobmarshwilly
      - POSTGRES_PASSWORD=06062025
      - POSTGRES_DB=notes_app_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - postgres-data:/var/lib/postgresql/data

  kafka:
    image: bitnami/kafka:3.7
    hostname: kafka
    environment:
      KAFKA_CFG_NODE_ID: "0"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "CONTROLLER://:19092,PLAINTEXT://:9092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:19092"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1"]
      start_period: 20s
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/bitnami/kafka

volumes:
  kafka-data:
  postgres-data:
