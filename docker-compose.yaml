services:
  app:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./alembic:/app/alembic
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
      celery_worker:
        condition: service_started
      celery_beat:
        condition: service_started

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - postgres-data:/var/lib/postgresql/data

  kafka:
    image: bitnami/kafka:3.7
    hostname: kafka
    environment:
      KAFKA_CFG_NODE_ID: "0"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "CONTROLLER://:19092,PLAINTEXT://:9092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:19092"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1"]
      start_period: 20s
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/bitnami/kafka
  
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - redis_data:/data
  
  celery_worker:
    build: .
    env_file:
      - .env
    command: 
      - /bin/sh
      - -c 
      - |
        /app/.venv/bin/celery -A notes_app.infrastructure.scheduler.celery_app:celery_app worker \
          -l INFO \
          -Q scheduler,default \
          --without-mingle \
          --without-gossip \
          --pool=solo
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_beat:
    build: .
    env_file:
      - .env
    command: 
      - /bin/sh
      - -c 
      - |
        /app/.venv/bin/celery -A notes_app.infrastructure.scheduler.celery_app:celery_app beat -l INFO    
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
      celery_worker:
        condition: service_started

volumes:
  kafka-data:
  postgres-data:
  redis_data:
